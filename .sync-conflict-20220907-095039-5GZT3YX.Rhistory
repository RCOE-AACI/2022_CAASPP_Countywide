output_file = paste0("Districts/", name, " Report.pdf"),
params = list(
cds = cds,
dist_name = name,
include_others = FALSE
)
)
}
View(c2022)
View(caaspp_long)
View(caaspp_dfs)
View(caaspp)
library(tidyverse)
library(ggthemes)
library(ggrepel)
c2015 <- read_csv("data/sb_ca2015_all_csv_v3.txt",
na = "*",
col_types = cols(
`County Code` = col_character()
)
) %>%
filter(`County Code` == "33", `School Code` == "0000000")
c2016 <- read_csv("data/sb_ca2016_all_csv_v3.txt",
na = "*",
col_types = cols(
`County Code` = col_character()
)
) %>%
filter(`County Code` == "33", `School Code` == "0000000")
c2017 <- read_csv("data/sb_ca2017_all_csv_v2.txt",
na = "*",
col_types = cols(
`County Code` = col_character()
)
) %>%
filter(`County Code` == "33", `School Code` == "0000000")
c2018 <- read_csv("data/sb_ca2018_all_33_csv_v3.txt",
na = "*",
col_types = cols(
`County Code` = col_character()
)
) %>%
filter(`School Code` == "0000000")
c2019 <- read_csv("data/sb_ca2019_all_33_csv_v4.txt",
na = "*",
col_types = cols(
`County Code` = col_character()
)
) %>%
filter(`School Code` == "0000000")
c2022 <- read_delim("data/sb_ca2022_all_csv_v1.txt",
na = "*", delim = "^"
) %>%
rename("Subgroup ID" = "Student Group ID",
"Test Id" = "Test ID") %>%
filter(`County Code` == "33", `School Code` == "0000000")
districts <- read_delim('https://www.cde.ca.gov/schooldirectory/report?rid=dl2&tp=txt') %>%
mutate(CDS = paste0(`CD Code`, "0000000")) %>%
select(CDS, district = District, DOC, DOCType) %>%
mutate(
district = gsub("\\s*\\w*$", "", district),
district = gsub("of$", "of Education", district)
)
groups <- read_delim('data/StudentGroups.txt', delim = "^")
focus_groups <- groups %>%
rename(
`group` = `Demographic ID Num`
) %>%
filter(
`group` %in% c(1, 128, 31, 160, 8, 75, 76, 74, 78, 78, 79, 80, 144, 4, 3, 28, 52, 240)
) %>%
bind_cols(short_group = c(
"ALL",
"SWD",
"SED",
"RFEP",
"EL",
"AI",
"AS",
"AA",
"HIS",
"PI",
"WH",
"MR",
"FEM",
"MAL",
"MIG",
"HOM",
"FOS"
))
test_id <- tibble(
TestID = c(1,2),
`Test Type` = c("ELA","Math")
)
caaspp <- bind_rows(c2015, c2016, c2017, c2018, c2019, c2022) %>%
mutate(CDS = paste0(`County Code`, `District Code`, `School Code`)) %>%
select(
CDS,
year = `Test Year`,
Grade,
group = `Subgroup ID`,
TestID = `Test Id`,
perc = `Percentage Standard Met and Above`,
`Exceeded` = `Percentage Standard Exceeded`,
`Met` = `Percentage Standard Met`,
`Nearly Met` = `Percentage Standard Nearly Met`,
`Not Met` = `Percentage Standard Not Met`,
`Mean Scale Score`,
n = `Students with Scores`
) %>%
left_join(districts) %>%
inner_join(focus_groups) %>%
left_join(test_id) %>%
mutate(
`Nearly Met` = -`Nearly Met`,
`Not Met` = -`Not Met`,
year = as.character(year),
Grade = as.character(Grade),
Grade = if_else(Grade == "13", "All", Grade),
district =
case_when(
district == "Riverside County Office of Education" ~ "RCOE",
is.na(district) ~ "Riverside County",
TRUE ~ district)
)
caaspp_long <- caaspp %>%
select(-perc) %>%
pivot_longer(
cols = `Exceeded`:`Not Met`,
names_to = "Level",
values_to = "Percent"
) %>%
mutate(Level = factor(Level, c("Exceeded", "Met", "Not Met", "Nearly Met")),
Grade = factor(Grade, c("All","3","4","5","6","7","8","11")),
year = factor(year, c("2015", "2016", "2017", "2018", "2019", "2022")),
cohort = if_else(
Grade == "All",
"",
paste0("Class of ", as.character(as.numeric(as.character(year)) + 12 - as.numeric(as.character(Grade))
))))
race_ethnicity = c(1,75,76,74,77,78,79,80,144)
program = c(1,31,160,240,52,128,4,3)
# Create DFS file
ela_targets_original <- tibble(
TestID = 1,
Grade = c("3","4","5","6","7","8","11"),
ss_target = c(2432,2473,2502,2531,2552,2567,2583)
)
math_targets_original <- tibble(
TestID = 2,
Grade = c("3","4","5","6","7","8","11"),
ss_target = c(2436,2485,2528,2552,2567,2586,2628)
)
ela_targets_new <- tibble(
TestID = 1,
Grade = c("3","4","5","6","7","8","11"),
ss_target = c(2432,2473,2502,2531,2552,2567,2583)
)
math_targets_new <- tibble(
TestID = 2,
Grade = c("3","4","5","6","7","8","11"),
ss_target = c(2436,2485,2528,2552,2567,2586,2628)
)
original_years = factor(c("2015", "2016", "2017", "2018", "2019", "2020"))
final_targets <- bind_rows(
crossing(year = original_years, ela_targets_original),
crossing(year = original_years, math_targets_original),
crossing(year = "2022", ela_targets_new),
crossing(year = "2022", math_targets_new)
)
years <- tibble(
year = c("2015", "2016", "2017", "2018", "2019", "2022"),
prev_year = c(NA, "2015", "2016", "2017", "2018", "2019")
)
caaspp_dfs <- caaspp_long %>%
select(-Level, -Percent) %>%
filter(!is.na(`Mean Scale Score`)) %>%
unique() %>%
group_by(CDS, year, district, DOC, `Demographic Name`, `Student Group`, `Test Type`, group, short_group, TestID) %>%
left_join(final_targets) %>%
mutate(dfs = `Mean Scale Score` - ss_target,
weighted_dfs = dfs * n) %>%
summarize(
n = sum(n),
weighted_dfs = sum(weighted_dfs),
dfs = weighted_dfs / n,
grade_levels_included = count()
) %>%
left_join(years)%>%
ungroup()
caaspp_dfs <- caaspp_long %>%
select(-Level, -Percent) %>%
filter(!is.na(`Mean Scale Score`)) %>%
unique() %>%
group_by(CDS, year, district, DOC, `Demographic Name`, `Student Group`, `Test Type`, group, short_group, TestID) %>%
left_join(final_targets) %>%
mutate(dfs = `Mean Scale Score` - ss_target,
weighted_dfs = dfs * n) %>%
summarize(
n = sum(n),
weighted_dfs = sum(weighted_dfs),
dfs = weighted_dfs / n,
grade_levels_included = n()
) %>%
left_join(years)%>%
ungroup()
prev_caasspp <- caaspp_dfs %>% select(prev_year = year, prev_dfs = dfs, CDS, group, TestID) %>% filter(!is.na(prev_year))
caaspp_dfs <- caaspp_dfs %>%
left_join(prev_caasspp) %>%
mutate(change = dfs - prev_dfs)
View(caaspp_dfs)
table(caaspp_dfs$grade_levels_included)
caaspp_dfs <- caaspp_dfs %>%
left_join(prev_caasspp) %>%
mutate(change = dfs - prev_dfs) %>%
filter(grade_levels_included <= 3)
caaspp_dfs <- caaspp_long %>%
select(-Level, -Percent) %>%
filter(!is.na(`Mean Scale Score`)) %>%
unique() %>%
group_by(CDS, year, district, DOC, `Demographic Name`, `Student Group`, `Test Type`, group, short_group, TestID) %>%
left_join(final_targets) %>%
mutate(dfs = `Mean Scale Score` - ss_target,
weighted_dfs = dfs * n) %>%
summarize(
n = sum(n),
weighted_dfs = sum(weighted_dfs),
dfs = weighted_dfs / n,
grade_levels_included = n()
) %>%
left_join(years)%>%
ungroup()
prev_caasspp <- caaspp_dfs %>% select(prev_year = year, prev_dfs = dfs, CDS, group, TestID) %>% filter(!is.na(prev_year))
caaspp_dfs <- caaspp_dfs %>%
left_join(prev_caasspp) %>%
mutate(change = dfs - prev_dfs) %>%
filter(grade_levels_included <= 3)
plot_dfs <- function(data, x_axis, test_id, dodge) {
if(deparse(substitute(x_axis)) != "year") {
data <- data %>% complete({{x_axis}}, year)
}
if(is.factor(data %>% pull({{x_axis}}))) {
x_axis_levels <- levels(data %>% pull({{x_axis}}))
wrapped_levels <- str_wrap(x_axis_levels, width = 15)
data <- data %>%
mutate("{{x_axis}}" := factor(str_wrap({{x_axis}}, width = 15), levels = wrapped_levels))
} else {
data <- data %>%
mutate("{{x_axis}}" := str_wrap({{x_axis}}, width = 15))
}
plot <- ggplot(data, aes(x={{x_axis}},y=dfs, fill = year))
DOC = data[1,] %>% pull(DOC)
hs_cutpoints = if_else(is.na(DOC) | DOC != 56, FALSE, TRUE)
if(test_id == 1 & hs_cutpoints == FALSE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-70 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 45, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 10,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -5, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -70, linetype = "longdash", alpha = 0.3)
} else if(test_id == 1 & hs_cutpoints == TRUE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-45 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 75, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 30,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -45, linetype = "longdash", alpha = 0.3)
} else if (test_id == 2 & hs_cutpoints == FALSE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-95 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 35, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -25, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -95, linetype = "longdash", alpha = 0.3)
} else if (test_id == 2 & hs_cutpoints == TRUE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-115 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 25, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -60, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -115, linetype = "longdash", alpha = 0.3)
}
plot <- plot +
geom_col(position = position_dodge(preserve = "single")) +
geom_text(aes(y = dfs + (sign(dfs) * 4), label = round(dfs,1)), size = 3, position = position_dodge(width = .9))+
scale_fill_economist() +
theme_few() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
geom_hline(yintercept = 0)
return(plot)
}
#
plot_data <- caaspp_dfs %>%
filter(
year %in% c("2019", "2022"),
CDS == "33669850000000",
TestID == 2,
group %in% program
)
plot <- plot_dfs(plot_data, x_axis = `Demographic Name`, test_id = 1) +
ggtitle("2022 Smarter Balanced Assessment Results", subtitle = "Student Race/Ethnicity Distance from Standard: English Language Arts")
plot
#
plot_data <- caaspp_dfs %>%
filter(
year %in% c("2019", "2022"),
CDS == "33669850000000",
TestID == 2,
group %in% program
)
plot <- plot_dfs(plot_data, x_axis = `Demographic Name`, test_id = 1) +
ggtitle("2022 Smarter Balanced Assessment Results", subtitle = "Student Race/Ethnicity Distance from Standard: English Language Arts")
caaspp_dfs <- caaspp_dfs %>%
left_join(prev_caasspp) %>%
mutate(change = dfs - prev_dfs) %>%
filter(grade_levels_included >= 4)
plot_dfs <- function(data, x_axis, test_id, dodge) {
if(deparse(substitute(x_axis)) != "year") {
data <- data %>% complete({{x_axis}}, year)
}
if(is.factor(data %>% pull({{x_axis}}))) {
x_axis_levels <- levels(data %>% pull({{x_axis}}))
wrapped_levels <- str_wrap(x_axis_levels, width = 15)
data <- data %>%
mutate("{{x_axis}}" := factor(str_wrap({{x_axis}}, width = 15), levels = wrapped_levels))
} else {
data <- data %>%
mutate("{{x_axis}}" := str_wrap({{x_axis}}, width = 15))
}
plot <- ggplot(data, aes(x={{x_axis}},y=dfs, fill = year))
DOC = data[1,] %>% pull(DOC)
hs_cutpoints = if_else(is.na(DOC) | DOC != 56, FALSE, TRUE)
if(test_id == 1 & hs_cutpoints == FALSE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-70 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 45, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 10,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -5, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -70, linetype = "longdash", alpha = 0.3)
} else if(test_id == 1 & hs_cutpoints == TRUE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-45 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 75, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 30,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -45, linetype = "longdash", alpha = 0.3)
} else if (test_id == 2 & hs_cutpoints == FALSE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-95 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 35, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -25, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -95, linetype = "longdash", alpha = 0.3)
} else if (test_id == 2 & hs_cutpoints == TRUE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-115 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 25, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -60, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -115, linetype = "longdash", alpha = 0.3)
}
plot <- plot +
geom_col(position = position_dodge(preserve = "single")) +
geom_text(aes(y = dfs + (sign(dfs) * 4), label = round(dfs,1)), size = 3, position = position_dodge(width = .9))+
scale_fill_economist() +
theme_few() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
geom_hline(yintercept = 0)
return(plot)
}
#
plot_data <- caaspp_dfs %>%
filter(
year %in% c("2019", "2022"),
CDS == "33669850000000",
TestID == 2,
group %in% program
)
plot <- plot_dfs(plot_data, x_axis = `Demographic Name`, test_id = 1) +
ggtitle("2022 Smarter Balanced Assessment Results", subtitle = "Student Race/Ethnicity Distance from Standard: English Language Arts")
plot
plot_data <- caaspp_dfs %>%
filter(
# year == "2022",
CDS == "33000000000000",
TestID == 1,
group == 1,
)
plot <- plot_dfs(plot_data, x_axis = `year`, test_id = 1) +
ggtitle("2022 Smarter Balanced Assessment Results", subtitle = " CAASPP DFS Over Time: English Language Arts") +
theme(legend.position = "none")
plot
#
plot_data <- caaspp_dfs %>%
filter(
year %in% c("2019", "2022"),
CDS == "33669850000000",
TestID == 2,
group %in% program
)
caaspp_dfs <- caaspp_long %>%
select(-Level, -Percent) %>%
filter(!is.na(`Mean Scale Score`)) %>%
unique() %>%
group_by(CDS, year, district, DOC, `Demographic Name`, `Student Group`, `Test Type`, group, short_group, TestID) %>%
left_join(final_targets) %>%
mutate(dfs = `Mean Scale Score` - ss_target,
weighted_dfs = dfs * n) %>%
summarize(
n = sum(n),
weighted_dfs = sum(weighted_dfs),
dfs = weighted_dfs / n,
grade_levels_included = n()
) %>%
left_join(years)%>%
ungroup()
prev_caasspp <- caaspp_dfs %>% select(prev_year = year, prev_dfs = dfs, CDS, group, TestID) %>% filter(!is.na(prev_year))
caaspp_dfs <- caaspp_dfs %>%
left_join(prev_caasspp) %>%
mutate(change = dfs - prev_dfs) %>%
filter(grade_levels_included >= 4)
plot_dfs <- function(data, x_axis, test_id, dodge) {
if(deparse(substitute(x_axis)) != "year") {
data <- data %>% complete({{x_axis}}, year)
}
if(is.factor(data %>% pull({{x_axis}}))) {
x_axis_levels <- levels(data %>% pull({{x_axis}}))
wrapped_levels <- str_wrap(x_axis_levels, width = 15)
data <- data %>%
mutate("{{x_axis}}" := factor(str_wrap({{x_axis}}, width = 15), levels = wrapped_levels))
} else {
data <- data %>%
mutate("{{x_axis}}" := str_wrap({{x_axis}}, width = 15))
}
plot <- ggplot(data, aes(x={{x_axis}},y=dfs, fill = year))
DOC = data[1,] %>% pull(DOC)
hs_cutpoints = if_else(is.na(DOC) | DOC != 56, FALSE, TRUE)
if(test_id == 1 & hs_cutpoints == FALSE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-70 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 45, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 10,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -5, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -70, linetype = "longdash", alpha = 0.3)
} else if(test_id == 1 & hs_cutpoints == TRUE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-45 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 75, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 30,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -45, linetype = "longdash", alpha = 0.3)
} else if (test_id == 2 & hs_cutpoints == FALSE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-95 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 35, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -25, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -95, linetype = "longdash", alpha = 0.3)
} else if (test_id == 2 & hs_cutpoints == TRUE) {
plot <- plot +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax=-115 , fill = "red", alpha = 0.5) +
geom_hline(yintercept = 25, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = 0,linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -60, linetype = "longdash", alpha = 0.3) +
geom_hline(yintercept = -115, linetype = "longdash", alpha = 0.3)
}
plot <- plot +
geom_col(position = position_dodge(preserve = "single")) +
geom_text(aes(y = dfs + (sign(dfs) * 4), label = round(dfs,1)), size = 3, position = position_dodge(width = .9))+
scale_fill_economist() +
theme_few() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
geom_hline(yintercept = 0)
return(plot)
}
#
plot_data <- caaspp_dfs %>%
filter(
year %in% c("2019", "2022"),
CDS == "33669850000000",
TestID == 2,
group %in% program
)
plot <- plot_dfs(plot_data, x_axis = `Demographic Name`, test_id = 1) +
ggtitle("2022 Smarter Balanced Assessment Results", subtitle = "Student Race/Ethnicity Distance from Standard: English Language Arts")
plot
plot_data <- caaspp_dfs %>%
filter(
# year == "2022",
CDS == "33000000000000",
TestID == 1,
group == 1,
)
plot <- plot_dfs(plot_data, x_axis = `year`, test_id = 1) +
ggtitle("2022 Smarter Balanced Assessment Results", subtitle = " CAASPP DFS Over Time: English Language Arts") +
theme(legend.position = "none")
plot
library(tidyverse)
districts <- read_delim('https://www.cde.ca.gov/schooldirectory/report?rid=dl2&tp=txt') %>%
mutate(CDS = paste0(`CD Code`, "0000000")) %>%
select(CDS, district = District) %>%
mutate(
district = gsub("\\s*\\w*$", "", district),
district = gsub("of$", "of Education", district)
)
riv_dists <- districts %>%
filter(
substr(CDS, 1, 2) == "33",
CDS != "33316250000000",
CDS != "33744920000000",
CDS != "33670410000000"
)
